#!/usr/bin/env python

import rospy
from inquirer import Text, List, prompt
from hmi_msgs.msg import HumanInteractionAction, HumanInteractionResult, Result
from actionlib import SimpleActionServer


class HMIServer(object):

    def __init__(self, name):
        self._action_name = name
        self.server = SimpleActionServer(name, HumanInteractionAction,
                                         execute_cb=self.execute_cb, auto_start=False)
        self.server.start()
        rospy.loginfo('%s started', name)

    def execute_cb(self, goal):

        result = self.determine_answer(question=goal.question,
                                       spec=goal.spec,
                                       choices=goal.choices)

        if result:
            self.server.set_succeeded(result)
        else:
            self.server.set_aborted(text="Cancelled by user")

    def determine_answer(self, question, spec, choices):

        results = []
        for choice in choices:
            if not len(choice.values):
                rospy.logwarn('No values found for choice "%s" in spec "%s"', choice.id, spec)
                continue
            answers = prompt([
                List(choice.id,
                     message=question,
                     choices=choice.values
                )
            ])

            if not answers:
                return None

            answer = answers[choice.id]
            results.append(Result(id=choice.id, value=answer))

            rospy.loginfo(repr(answers))

        return HumanInteractionResult(results=results)

if __name__ == '__main__':
    rospy.init_node('random_anwerer')
    HMIServer(rospy.get_name())
    rospy.spin()
