#!/usr/bin/env python
import random

import rospy
from hmi import AbstractHMIServer, HMIResult
from hmi.common import random_sentence, result_from_ros, parse_sentence

wait_time = 5


class HMIServer(AbstractHMIServer):
    def _determine_answer(self, description, grammar, target, is_preempt_requested):

        rospy.loginfo('Waiting for %d seconds', wait_time)
        start = rospy.Time.now()
        while rospy.Time.now() - start < rospy.Duration(wait_time) \
            and not is_preempt_requested() \
            and not rospy.is_shutdown():
            rospy.sleep(0.1)

        sentence = random_sentence(grammar, target)
        rospy.loginfo("Generated random sentence: %s", sentence)

        semantics = parse_sentence(sentence, grammar, target)
        rospy.loginfo("Parsed semantics: %s", semantics)

        return HMIResult(sentence, semantics)


if __name__ == '__main__':
    rospy.init_node('random_answerer')
    HMIServer(rospy.get_name())
    rospy.spin()
